
USE [RAYEN]
GO
	IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AGW0007]') AND type = N'P') 
	--Se crea encabezado vacio del SP en caso de ser nuevo
	exec('CREATE PROCEDURE [dbo].[AGW0007] AS BEGIN SET NOCOUNT ON; END')
GO
/****** Object:  StoredProcedure [dbo].[AGW0013]    Script Date: 16-03-2018 16:45:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/************************************************************************
NOMBRE DEL PROCEDIMIENTO: AGW0007
AUTOR: Gonzalo Carrasco
FECHA DE CREACIÓN: 08/04/2016
BASE DE DATOS: AGENDAWEB
OBJETIVO: Obtiene citas de un paciente
FECHA DE MODIFICACIÓN: 09-04-2018
USUARIO DE MODIFICACIÓN:  Felipe Nieto
MOTIVO DE MODIFICACIÓN: Mejoramiento de Performance
VISADO POR (QA): 
FECHA APROBACIÓN QA: 
COMENTARIOS QA: 
VISADO POR (DBA): 
FECHA APROBACIÓN DBA: 
COMENTARIOS DBA: 
TABLAS INVOLUCRADAS: CIT_CITA, TDA_TIPO_DE_ATENCION, NOD_NODO, FNP_FUNCIONARIO_PRESTADOR, CPO_CUPO, SGH_SEGMENTOS_HORARIOS, 
ESP_ESPECIALIDAD, USP_USUARIO_APS, 
***********************************************************************/
--AGW0007 '2411,2012'
ALTER procedure [dbo].[AGW0007]
(
  @NOD_IDS varchar(max)
)
as
begin

select NOD.ID, NOD.DESCRIPCION
into #NOD
from NOD_NODO NOD
INNER JOIN dbo.OBTENER_ID_Coma(@NOD_IDS) ids on ids.ID = NOD.ID


select TOP 1000
cit.ID,
cit.ID AS ID_CITA,
cit.FECHA_HORA_INICIO,
cit.TDA_ID,
FNP_ID_ATEN,
USP_ID,
cit.NOD_ID,
SEG.ESP_ID 
into #cit
from CIT_CITA cit
inner JOIN CPO_CUPO CPO ON CPO.CIT_ID = cit.ID
inner JOIN SGH_SEGMENTOS_HORARIOS SEG ON SEG.ID = CPO.SGH_ID and SEG.ES_DISPONIBLE_WEB = 1
INNER JOIN dbo.OBTENER_ID_Coma(@NOD_IDS) ids on ids.ID = cit.NOD_ID
where cit.FECHA_HORA_INICIO > DATEADD(day, 0, GETDATE())
  AND cit.ELIMINADO=0     
  AND cit.ESANULADO=0     
  AND cit.ES_RECHAZADO=0     
  AND cit.ETC_ID=3 

 -- SELECT * FROM #cit

 
SELECT cit.ID_CITA,    
 TDA.NOMBRE AS TIPO_ATENCION,    
 CONVERT(varchar(8),CIT.FECHA_HORA_INICIO,112) AS FECHA_CITA,    
 CONVERT(varchar(5),CIT.FECHA_HORA_INICIO,108) AS HORA_CITA,    
 NOD.ID AS ID_ESTABLECIMIENTO,    
 NOD.DESCRIPCION AS NOMBRE_ESTABLECIMIENTO,       
 FNP.ID AS ID_PROFESIONAL,    
 RTRIM (FNP.NOMBRES) + ' ' + FNP.APELLIDO_PATERNO  AS NOMBRE_PROFESIONAL ,         
 USP.ID AS ID_PACIENTE,
USP.RUT AS RUT_PACIENTE,    
 USP.NOMBRES + ' ' + USP.APELLIDO_PATERNO + ' ' + USP.APELLIDO_MATERNO AS NOMBRE_PACIENTE,      
 USP.EMAIL AS EMAIL,
ESP.ID  AS ID_ESPECIALIDAD,
ESP.NOMBRE AS ESPECIALIDAD
into #resultado
FROM #cit cit 
inner JOIN TDA_TIPO_DE_ATENCION TDA ON TDA.ID=cit.TDA_ID    
inner JOIN #NOD NOD ON NOD.ID=cit.NOD_ID      
inner JOIN FNP_FUNCIONARIO_PRESTADOR FNP ON FNP.ID=cit.FNP_ID_ATEN    
inner JOIN ESP_ESPECIALIDAD ESP ON ESP.ID = CIT.ESP_ID 
INNER JOIN USP_USUARIO_APS USP ON USP.ID = CIT.[USP_ID] 

 

select 
       ID_CITA, TIPO_ATENCION, FECHA_CITA, HORA_CITA, ID_ESTABLECIMIENTO, NOMBRE_ESTABLECIMIENTO, ID_PROFESIONAL, NOMBRE_PROFESIONAL,
       ID_PACIENTE, RUT_PACIENTE, NOMBRE_PACIENTE, EMAIL, [TEL1_CONTACTO], [MOVIL_CONTACTO], [TEL1_FICHA_FAMILIAR], [MOVIL_FICHA_FAMILIAR], ID_ESPECIALIDAD, ESPECIALIDAD
from
(
    select 
        res.ID_CITA,
             res.TIPO_ATENCION,
             res.FECHA_CITA,
             res.HORA_CITA,
             res.ID_ESTABLECIMIENTO,
             res.NOMBRE_ESTABLECIMIENTO,
             res.ID_PROFESIONAL,
             res.NOMBRE_PROFESIONAL,
             res.ID_PACIENTE,
             res.RUT_PACIENTE,
             res.NOMBRE_PACIENTE,
             res.EMAIL,
             res.ID_ESPECIALIDAD,
             res.ESPECIALIDAD,
             tus.ETIQUETA_TELEFONO,
             tus.TELEFONO_DESCRIPCION
    from
    #resultado res
    left join TUS_TELEFONO_USUARIO TUS on res.ID_PACIENTE = tus.USP_ID and TUS.ELIMINADO = 0
) tb
pivot
(
       max(TELEFONO_DESCRIPCION)
       FOR ETIQUETA_TELEFONO IN ([TEL1_CONTACTO], [MOVIL_CONTACTO], [TEL1_FICHA_FAMILIAR], [MOVIL_FICHA_FAMILIAR])
)pv


drop table #cit, #NOD, #resultado
end


