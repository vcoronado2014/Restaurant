USE [RAYEN]
GO
	IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AGW0001]') AND type = N'P') 
	--Se crea encabezado vacio del SP en caso de ser nuevo
	exec('CREATE PROCEDURE [dbo].[AGW0001] AS BEGIN SET NOCOUNT ON; END')
GO
/****** Object:  StoredProcedure [dbo].[AGW0001]    Script Date: 21-05-2018 16:45:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/************************************************************************
NOMBRE DEL PROCEDIMIENTO: AGW0001
AUTOR: Gonzalo Carrasco
FECHA DE CREACIÓN: 08/04/2016
BASE DE DATOS: AGENDAWEB
OBJETIVO: Actualiza los emails o telefonos asociados a un paciente
FECHA DE MODIFICACIÓN: 02/05/2016
USUARIO DE MODIFICACIÓN: Francisco Poblete
MOTIVO DE MODIFICACIÓN: Se agregó codigo de area y pais
VISADO POR (QA): 
FECHA APROBACIÓN QA: 
COMENTARIOS QA: 
VISADO POR (DBA): 
FECHA APROBACIÓN DBA: 
COMENTARIOS DBA: 
TABLAS INVOLUCRADAS: USP_USUARIO_APS, TUS_TELEFONO_USUARIO
***********************************************************************/

ALTER PROCEDURE [dbo].[AGW0001]  
(   
 @ID_PACIENTE INT,     
 @EMAIL VARCHAR(MAX),       
 @TELEFONO_DESCRIPCION VARCHAR(MAX),
 @ETIQUETA_TELEFONO VARCHAR(MAX),
 @CODIGO_PAIS INT,
 @CODIGO_AREA INT
)  
AS  
BEGIN  



 --para probar el sp
DECLARE @TELEFONO varchar(20);
DECLARE @CODIGOAREA INT;
DECLARE @TIPO_TELEFONO INT;
--AHORA NOS DA LO MISMO SI VIENE O NO EMAIL, YA QUE AGENDA NO LO REQUIERE
--ACTUALIZAMOS USP IGUAL
UPDATE [dbo].[USP_USUARIO_APS] SET EMAIL = @EMAIL WHERE ID = @ID_PACIENTE
--AHORA COMENZAMOS CON UN MANEJO MAS ELABORADO DE LOS TELEFONOS

	IF (@ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR')
	BEGIN
		declare @largo int
		set @largo = (select LEN(@TELEFONO_DESCRIPCION))
		--TIPO 1
		SET @TIPO_TELEFONO = 1
		if @largo > 1
		--IF @TELEFONO_DESCRIPCION <> ''
		BEGIN
			--SI ES UN TELEFONO FIJO, DEBEMOS HACER ALGUNAS OPERACIONES
			IF ( CONVERT( INTEGER, SUBSTRING(@telefono_descripcion, 1, 1) ) = 2)
			BEGIN
			  SET @TELEFONO = SUBSTRING(@TELEFONO_DESCRIPCION,2, LEN(@TELEFONO_DESCRIPCION) - 1);
			  SET @CODIGOAREA = CONVERT(INTEGER, SUBSTRING(@TELEFONO_DESCRIPCION,1,1));
			END
			IF (CONVERT(INTEGER,SUBSTRING(@TELEFONO_DESCRIPCION, 1, 1)) <> 2)
			BEGIN
			  SET @TELEFONO = SUBSTRING(@TELEFONO_DESCRIPCION,3,LEN(@TELEFONO_DESCRIPCION)-1);
			  SET @CODIGOAREA = CONVERT(INTEGER, SUBSTRING(@TELEFONO_DESCRIPCION,1,2));
			END
			--revisamos si existe o no, ya esta controlado si esta vacio
			IF EXISTS (SELECT ID FROM TUS_TELEFONO_USUARIO WHERE USP_ID = @ID_PACIENTE AND ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO AND ELIMINADO = 0)
			BEGIN 
				-- si existe
				print 'si existe, se actualiza'
				UPDATE [dbo].[TUS_TELEFONO_USUARIO] 
				  SET TELEFONO_DESCRIPCION = @TELEFONO, 
					CODIGO_PAIS = @CODIGO_PAIS, 
					CODIGO_AREA = @CODIGOAREA, 
					FECHA_HORA_SERVIDOR_ENTERA = (convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())), 
					FECHA_HORA_SERVIDOR = GETDATE() 
				  WHERE USP_ID = @ID_PACIENTE AND 
					ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO
			END
			ELSE
			BEGIN
				PRINT 'NO EXISTE SE INSERTA'
				INSERT INTO [dbo].[TUS_TELEFONO_USUARIO]    
					([TELEFONO_DESCRIPCION]    
					,[TIPO_TELEFONO]    
					,[ETIQUETA_TELEFONO]    
					,[USP_ID]    
					,[ELIMINADO]    
					,[CODIGO_PAIS]    
					,[CODIGO_AREA]
					,[FECHA_HORA_SERVIDOR]
					,[FECHA_HORA_SERVIDOR_ENTERA])    
				VALUES    
					(@TELEFONO    
					,@TIPO_TELEFONO    
					,@ETIQUETA_TELEFONO    
					,@ID_PACIENTE    
					,0    
					,@CODIGO_PAIS    
					,@CODIGOAREA
					,GETDATE()
					,(convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())))
			END

		END
		ELSE
		BEGIN
			--AHORA SI ESTA VACIO DEBE SER ACTUALIZADO A ELIMINADO 1 CUANDO EXISTA
			SET @CODIGO_AREA = 0
			SET @CODIGO_PAIS = 0
			SET @TELEFONO = ''
			IF EXISTS (SELECT ID FROM TUS_TELEFONO_USUARIO WHERE USP_ID = @ID_PACIENTE AND ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO AND ELIMINADO = 0)
			BEGIN 
				-- si existe
				print 'si existe, se actualiza'
				UPDATE [dbo].[TUS_TELEFONO_USUARIO] 
				  SET
					ELIMINADO = 1, 
					TELEFONO_DESCRIPCION = @TELEFONO, 
					CODIGO_PAIS = @CODIGO_PAIS, 
					CODIGO_AREA = @CODIGOAREA, 
					FECHA_HORA_SERVIDOR_ENTERA = (convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())), 
					FECHA_HORA_SERVIDOR = GETDATE() 
				  WHERE USP_ID = @ID_PACIENTE AND 
					ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO
			END

		END
	END
	
	ELSE
	BEGIN
		--TIPO 4
		SET @TIPO_TELEFONO = 4
		set @CODIGOAREA = 9
		IF ((@TELEFONO_DESCRIPCION <> '') and (@TELEFONO_DESCRIPCION <> '0'))
		BEGIN
			--VIENE UN TELEFONO DISTITNTO DE VACIO Y CERO POR LO TANTO SE DEBE
			--EVALUAR CUANDO EXISTA O NO
			SET @TELEFONO = CONVERT(INTEGER, SUBSTRING(@TELEFONO_DESCRIPCION,2,8))
			IF EXISTS (SELECT ID FROM TUS_TELEFONO_USUARIO WHERE USP_ID = @ID_PACIENTE AND ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO AND ELIMINADO = 0)
			BEGIN 
				-- si existe
				print 'si existe, se actualiza'
				UPDATE [dbo].[TUS_TELEFONO_USUARIO] 
				  SET TELEFONO_DESCRIPCION = @TELEFONO, 
					CODIGO_PAIS = @CODIGO_PAIS, 
					CODIGO_AREA = @CODIGOAREA, 
					FECHA_HORA_SERVIDOR_ENTERA = (convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())), 
					FECHA_HORA_SERVIDOR = GETDATE() 
				  WHERE USP_ID = @ID_PACIENTE AND 
					ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO
			END
			ELSE
			BEGIN
				PRINT 'NO EXISTE SE INSERTA'
				INSERT INTO [dbo].[TUS_TELEFONO_USUARIO]    
					([TELEFONO_DESCRIPCION]    
					,[TIPO_TELEFONO]    
					,[ETIQUETA_TELEFONO]    
					,[USP_ID]    
					,[ELIMINADO]    
					,[CODIGO_PAIS]    
					,[CODIGO_AREA]
					,[FECHA_HORA_SERVIDOR]
					,[FECHA_HORA_SERVIDOR_ENTERA])    
				VALUES    
					(@TELEFONO    
					,@TIPO_TELEFONO    
					,@ETIQUETA_TELEFONO    
					,@ID_PACIENTE    
					,0    
					,@CODIGO_PAIS    
					,@CODIGOAREA
					,GETDATE()
					,(convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())))
			END

		END
		ELSE
		BEGIN
			SET @CODIGO_PAIS = 0
			SET @TELEFONO =''
			IF EXISTS (SELECT ID FROM TUS_TELEFONO_USUARIO WHERE USP_ID = @ID_PACIENTE AND ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO AND ELIMINADO = 0)
			BEGIN 
				-- si existe
				print 'si existe, se actualiza'
				UPDATE [dbo].[TUS_TELEFONO_USUARIO] 
				  SET
					ELIMINADO = 1, 
					TELEFONO_DESCRIPCION = @TELEFONO, 
					CODIGO_PAIS = @CODIGO_PAIS, 
					CODIGO_AREA = @CODIGOAREA, 
					FECHA_HORA_SERVIDOR_ENTERA = (convert(bigint,year(GETDATE()))*10000000000+month(GETDATE())*100000000+day(GETDATE())*1000000+DATEPART(HOUR, GETDATE())*10000+DATEPART(MINUTE, GETDATE())*100+DATEPART(SECOND, GETDATE())), 
					FECHA_HORA_SERVIDOR = GETDATE() 
				  WHERE USP_ID = @ID_PACIENTE AND 
					ETIQUETA_TELEFONO = @ETIQUETA_TELEFONO
			END
			
		END
	END

END

GO

	IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AGW0006]') AND type = N'P') 
	--Se crea encabezado vacio del SP en caso de ser nuevo
	exec('CREATE PROCEDURE [dbo].[AGW0006] AS BEGIN SET NOCOUNT ON; END')
GO
/****** Object:  StoredProcedure [dbo].[AGW0006]    Script Date: 21-05-2018 16:45:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/************************************************************************
NOMBRE DEL PROCEDIMIENTO: AGW0006
AUTOR: Gonzalo Carrasco
FECHA DE CREACIÓN: 08/04/2016
BASE DE DATOS: AGENDAWEB
OBJETIVO: Obtiene datos de una cita
FECHA DE MODIFICACIÓN: 04/05/2016
USUARIO DE MODIFICACIÓN: Francisco Poblete
MOTIVO DE MODIFICACIÓN: Se agrega codigo de area y pais
FECHA DE MODIFICACIÓN: 20/03/2017
USUARIO DE MODIFICACIÓN: VICTOR CORONADO
MOTIVO DE MODIFICACIÓN: SE MODIFICA PARA TRAER EL INSTRUMENTO Y NO LA ESPECIALIDAD
USUARIO DE MODIFICACIÓN: Víctor Coronado
MOTIVO DE MODIFICACIÓN: Se agrega la condicion de eliminado = 0 en TUS_TELEFONO_USUARIO
FECHA DE MODIFICACIÓN: 24/05/2018
VISADO POR (QA): 
FECHA APROBACIÓN QA: 
COMENTARIOS QA: 
VISADO POR (DBA): 
FECHA APROBACIÓN DBA: 
COMENTARIOS DBA: 
TABLAS INVOLUCRADAS: USP_USUARIO_APS, CIT_CITA, TDA_TIPO_DE_ATENCION, NOD_NODO, FNP_FUNCIONARIO_PRESTADOR
CPO_CUPO, SGH_SEGMENTOS_HORARIOS, ESP_ESPECIALIDAD
***********************************************************************/

ALTER procedure [dbo].[AGW0006]    
(    
 @ID_CITA INT  
)    
AS    
BEGIN    
SELECT      
 cit.ID AS ID_CITA,    
 TAW.NOMBRE AS TIPO_ATENCION,    
 CONVERT(varchar(8),CIT.FECHA_HORA_INICIO,112) AS FECHA_CITA,    
 CONVERT(varchar(5),CIT.FECHA_HORA_INICIO,108) AS HORA_CITA,    
 NOD.ID AS ID_ESTABLECIMIENTO,    
 NOD.DESCRIPCION AS NOMBRE_ESTABLECIMIENTO,       
 FNP.ID AS ID_PROFESIONAL,    
 RTRIM (FNP.NOMBRES) + ' ' + FNP.APELLIDO_PATERNO  AS NOMBRE_PROFESIONAL,          
 USP.ID AS ID_PACIENTE,
 USP.RUT AS RUT_PACIENTE,    
 USP.NOMBRES + ' ' + USP.APELLIDO_PATERNO + ' ' + USP.APELLIDO_MATERNO AS NOMBRE_PACIENTE,      
 USP.EMAIL AS EMAIL,
(SELECT TOP 1  
      ( convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]) ) TELEFONO_DESCRIPCION
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' and ELIMINADO = 0) AS TEL1_CONTACTO,
(SELECT TOP 1  
      [CODIGO_PAIS]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' and ELIMINADO = 0) AS TEL1_CODIGO_PAIS,
(SELECT TOP 1  
      [CODIGO_AREA]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' and ELIMINADO = 0) AS TEL1_CODIGO_AREA,
(SELECT TOP 1  
     ( convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]) ) TELEFONO_DESCRIPCION
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR' and ELIMINADO = 0) AS MOVIL_CONTACTO  
          ,
(SELECT TOP 1  
      [TELEFONO_DESCRIPCION]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' and ELIMINADO = 0) AS TEL1_FICHA_FAMILIAR  
            ,
(SELECT TOP 1  
      [TELEFONO_DESCRIPCION]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR' and ELIMINADO = 0) AS MOVIL_FICHA_FAMILIAR,
 --ESP.ID  AS ID_ESPECIALIDAD,
 --ESP.NOMBRE AS ESPECIALIDAD
 inst.ID  AS ID_ESPECIALIDAD,
 inst.NOMBRE AS ESPECIALIDAD
     
FROM RAYEN..USP_USUARIO_APS USP    
 INNER JOIN RAYEN..CIT_CITA CIT ON cit.USP_ID=usp.ID AND CIT.ID = @ID_CITA
  INNER JOIN RAYEN..CPO_CUPO CPO ON CPO.CIT_ID = cit.ID
 INNER JOIN RAYEN..SGH_SEGMENTOS_HORARIOS SEG ON SEG.ID = CPO.SGH_ID 
 INNER JOIN RAYEN..TAW_TIPO_ATENCION_WEB TAW ON TAW.ID=SEG.TAW_ID  
 INNER JOIN RAYEN..NOD_NODO NOD ON NOD.ID=cit.NOD_ID      
 INNER JOIN RAYEN..FNP_FUNCIONARIO_PRESTADOR FNP ON FNP.ID=cit.FNP_ID_ATEN    
 INNER JOIN RAYEN..ESP_ESPECIALIDAD ESP ON ESP.ID = SEG.ESP_ID
 inner join rayen..INS_INSTRUMENTO inst on inst.ID = CIT.INS_ID  
WHERE     
 cit.ELIMINADO=0     
 AND cit.ESANULADO=0     
 AND cit.ES_RECHAZADO=0     
 AND cit.ETC_ID=3     
 --AND CIT.FECHA_HORA_INICIO >= DATEADD(month, -3, GETDATE())
    
END
GO

	IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AGW0013]') AND type = N'P') 
	--Se crea encabezado vacio del SP en caso de ser nuevo
	exec('CREATE PROCEDURE [dbo].[AGW0013] AS BEGIN SET NOCOUNT ON; END')
GO
/****** Object:  StoredProcedure [dbo].[AGW0013]    Script Date: 21-05-2018 16:45:12 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/************************************************************************
NOMBRE DEL PROCEDIMIENTO: AGW0013
AUTOR: Gonzalo Carrasco
FECHA DE CREACIÓN: 29/03/2016
BASE DE DATOS: AGENDAWEB
OBJETIVO: ENTREGA UN PACIENTE MEDIANTE EL RUT Y FECHA DE NACIMIENTO
FECHA DE MODIFICACIÓN: 04-04-2017
USUARIO DE MODIFICACIÓN:  VICTOR CORONADO
MOTIVO DE MODIFICACIÓN: SE AGREGA PARAMETRO FECHA NACIMIENTO
FECHA DE MODIFICACIÓN: 16-03-2018
USUARIO DE MODIFICACIÓN:  VICTOR CORONADO
MOTIVO DE MODIFICACIÓN: SE OPCION PARA VERIFICAR SI VIENE LA FECHA DE NACIMIENTO O NO
VISADO POR (QA): 
FECHA APROBACIÓN QA: 
COMENTARIOS QA: 
VISADO POR (DBA): 
FECHA APROBACIÓN DBA: 
COMENTARIOS DBA: 
TABLAS INVOLUCRADAS: USP_USUARIO_PAS, PRA_PARAMETROS_RAYEN, USN_USUARIO_NODO, NOD_NODO TUS_TELEFONO_USUARIO
************************************************************************/

ALTER PROCEDURE [dbo].[AGW0013]    
(    
@RUT VARCHAR(100) = '',    
@NOMBRES VARCHAR(MAX),    
@AP_PATERNO VARCHAR(MAX),    
@AP_MATERNO VARCHAR(MAX),
@FECHA_NACIMIENTO VARCHAR(100)=''    
)    
AS    
BEGIN    
    
DECLARE @WNOMBRES VARCHAR(MAX),    
@WAP_PATERNO VARCHAR(MAX),    
@WAP_MATERNO VARCHAR(MAX),    
@QUERY VARCHAR(MAX)    
    
SET @WNOMBRES = 'UPPER(NOMBRES) LIKE UPPER(' + Char(39) + @NOMBRES+'%' + Char(39)+ ')'    
SET @WAP_MATERNO = 'AND UPPER(APELLIDO_PATERNO) LIKE UPPER(' + Char(39) + @AP_PATERNO + Char(39)+ ')'    
SET @WAP_PATERNO = 'AND UPPER(APELLIDO_MATERNO) LIKE UPPER(' + Char(39) + @AP_MATERNO + Char(39)+ ')'    
    
    
IF ( @RUT = NULL ) OR (@RUT = '')    
BEGIN    
    
SET @QUERY = N'SELECT top 10 [ID]    
      ,[NOD_ID]    
      ,[RUT]    
      ,[NOMBRES]    
      ,[APELLIDO_PATERNO]    
      ,[APELLIDO_MATERNO]    
      ,[ACTIVO]    
      ,[ELIMINADO]  
      ,[EMAIL]    
  FROM [dbo].[USP_USUARIO_APS]    
  where ' +  @WNOMBRES +  @WAP_MATERNO + @WAP_PATERNO    
    
EXEC (@QUERY)    
    
END    
ELSE    
BEGIN    
	IF ( @FECHA_NACIMIENTO = NULL ) OR (@FECHA_NACIMIENTO = '')    
	BEGIN  
			SELECT USP.[ID]    
			  ,USP.[NOD_ID]    
			  ,NOD.DESCRIPCION AS NODO  
			  ,USP.[RUT]    
			  ,USP.[NOMBRES]    
			  ,USP.[APELLIDO_PATERNO]    
			  ,USP.[APELLIDO_MATERNO]    
			  ,USP.[ACTIVO]    
			  ,USP.[ELIMINADO]   
			  ,USP.[EMAIL]  
			  ,(SELECT TOP 1  
			  (convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]))  
		  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' AND ELIMINADO = 0) AS TEL1_CONTACTO
			,(SELECT TOP 1  
			  [CODIGO_AREA]  
		  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' AND ELIMINADO = 0) AS TEL1_CODIGO_AREA
				,(SELECT TOP 1  
			  (convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]))
		  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR' AND ELIMINADO = 0) AS MOVIL_CONTACTO
				  ,(SELECT TOP 1  
			  [TELEFONO_DESCRIPCION]  
		  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR' AND ELIMINADO = 0) AS TEL1_FICHA_FAMILIAR  
					,(SELECT TOP 1  
			  [TELEFONO_DESCRIPCION]  
		  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR' AND ELIMINADO = 0) AS MOVIL_FICHA_FAMILIAR ,
		  USP.FECHA_DE_NACIMIENTO 
		  FROM [dbo].[USP_USUARIO_APS] USP with (nolock)   
		  INNER JOIN USN_USUARIO_NODO USN with (nolock) ON USN.USP_ID=USP.ID
		  INNER JOIN NOD_NODO NOD with (nolock) ON NOD.ID = USN.NOD_ID  AND USN.ACTIVO=1 AND USN.ELIMINADO=0  AND USN.ES_INSCRITO=1
		  INNER JOIN PRA_PARAMETROS_RAYEN PRA with (nolock)  ON PRA.NOD_ID=USN.NOD_ID  
		  where UPPER(RUT) = UPPER(@RUT) and usp.ELIMINADO=0 AND PRA.DESCRIPCION = 'DISPONIBILIZA_AGENDA_WEB' AND PRA.ELIMINADO = 0 AND PRA.VALOR = 1
		  --AND CONVERT(VARCHAR, USP.FECHA_DE_NACIMIENTO, 112) = convert(varchar, convert(DATE, @FECHA_NACIMIENTO, 103), 112)
	END
	ELSE
	BEGIN

		SELECT USP.[ID]    
      ,USP.[NOD_ID]    
      ,NOD.DESCRIPCION AS NODO  
      ,USP.[RUT]    
      ,USP.[NOMBRES]    
      ,USP.[APELLIDO_PATERNO]    
      ,USP.[APELLIDO_MATERNO]    
      ,USP.[ACTIVO]    
      ,USP.[ELIMINADO]   
      ,USP.[EMAIL]  
      ,(SELECT TOP 1  
      (convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]))  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR') AS TEL1_CONTACTO
    ,(SELECT TOP 1  
      [CODIGO_AREA]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR') AS TEL1_CODIGO_AREA
        ,(SELECT TOP 1  
      (convert(varchar(max), [CODIGO_AREA]) + '' + convert(varchar(max), [TELEFONO_DESCRIPCION]))
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR') AS MOVIL_CONTACTO
          ,(SELECT TOP 1  
      [TELEFONO_DESCRIPCION]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'TEL1_FICHA_FAMILIAR') AS TEL1_FICHA_FAMILIAR  
            ,(SELECT TOP 1  
      [TELEFONO_DESCRIPCION]  
  FROM [RAYEN].[dbo].[TUS_TELEFONO_USUARIO] with (nolock) where USP_ID = USP.ID AND ETIQUETA_TELEFONO = 'MOVIL_FICHA_FAMILIAR') AS MOVIL_FICHA_FAMILIAR ,
  USP.FECHA_DE_NACIMIENTO 
  FROM [dbo].[USP_USUARIO_APS] USP with (nolock)   
  INNER JOIN USN_USUARIO_NODO USN with (nolock) ON USN.USP_ID=USP.ID
  INNER JOIN NOD_NODO NOD with (nolock) ON NOD.ID = USN.NOD_ID  AND USN.ACTIVO=1 AND USN.ELIMINADO=0  AND USN.ES_INSCRITO=1
  INNER JOIN PRA_PARAMETROS_RAYEN PRA with (nolock)  ON PRA.NOD_ID=USN.NOD_ID  
  where UPPER(RUT) = UPPER(@RUT) and usp.ELIMINADO=0 AND PRA.DESCRIPCION = 'DISPONIBILIZA_AGENDA_WEB' AND PRA.ELIMINADO = 0 AND PRA.VALOR = 1
  AND CONVERT(VARCHAR, USP.FECHA_DE_NACIMIENTO, 112) = convert(varchar, convert(DATE, @FECHA_NACIMIENTO, 103), 112)
	END
END    
END
GO
